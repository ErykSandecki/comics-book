{"version":3,"sources":["enums.ts","assets/images/backgrounds/error.svg","components/ErrorPage/ErrorPage.tsx","assets/images/icons/send-icon.svg","components/Chat/ChatInput/ChatInput.tsx","components/Chat/ChatMessages/ChatMessages.tsx","core/ContextProvider/ContextProvider.tsx","store/profiles/actionsType.ts","components/Chat/Chat.tsx","assets/images/icons/close-outlined-icon.svg","components/NavMenu/NavMenu.tsx","assets/images/icons/close-icon.svg","assets/images/icons/gear-icon.svg","assets/images/icons/modify-size-icon.svg","components/PageHeader/PageHeaderSettingsMenu/PageHeaderSettingsMenu.tsx","assets/images/icons/hamburger-menu.svg","components/PageHeader/PageHeader.tsx","assets/images/icons/back.svg","assets/images/icons/button-picture.svg","assets/images/icons/empty-image.svg","components/ProfileForm/services/loadImage.ts","store/profiles/selectors.ts","components/ProfilePickerSection/enums.ts","components/ProfileForm/ProfileForm.tsx","store/profiles/actions.ts","components/CreateProfileForm/CreateProfileForm.tsx","assets/images/icons/plus.svg","components/ProfilePicker/ProfilePicker.tsx","store/auth/actionsType.ts","components/ProfilePickerList/ProfilePickerList.tsx","components/ProfilePickerSection/ProfilePickerSection.tsx","assets/images/backgrounds/gentleman.svg","components/PageLoader/PageLoader.tsx","store/auth/selectors.ts","components/Firebase/enums.ts","store/selectors.ts","components/Page/Page.tsx","store/auth/actions.ts","components/App/App.tsx","components/Firebase/constants.ts","components/Firebase/services/databaseErrorHandler.ts","components/Firebase/services/databaseSuccessHandler.ts","components/Firebase/services/databaseHandler.ts","components/Firebase/Firebase.tsx","store/auth/reducer.ts","store/profiles/reducer.ts","store/reducers.ts","store/auth/saga.ts","constants.ts","store/auth/watch.ts","store/common/saga.ts","store/common/actionsType.ts","store/common/watch.ts","components/Firebase/services/afterUploadImageHandler.ts","components/Firebase/services/generateProfileId.ts","components/Firebase/services/getRefDatabase.ts","store/common/actions.ts","store/profiles/saga.ts","store/profiles/watch.ts","store/watchers.ts","store/configureStore.ts","index.tsx"],"names":["LocalStorageKey","StoragePath","ErrorPage","className","alt","src","Background","ChatInput","forwardRef","ref","inputHandler","useState","visibilityPlaceholder","setVisibilityPlaceholder","contentEditable","onBlur","event","target","innerText","onFocus","onInput","suppressContentEditableWarning","SendIcon","ChatMessages","_","ProfilesActionsType","Context","createContext","margin","setMargin","ContextProvider","children","parseInt","localStorage","getItem","marginOffset","Provider","value","result","setItem","Chat","messagesRef","useRef","inputRef","useContext","style","height","current","clientHeight","NavMenu","visible","setVisible","onClickHandler","onClick","e","stopPropagation","CloseOutlinedIcon","PageHeaderSettingsMenu","anchorEl","setAnchorEl","onClickCloseHandler","currentTarget","GearIcon","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","ModifySizeIcon","CloseIcon","PageHeader","HamburgerMenu","loadImage","setImageData","reader","FileReader","files","onload","file","readAsDataURL","REDUCER_KEY","Mode","profilesSelector","getFp","isPendingSelector","createSelector","profilesLoadedSelector","composeFp","isArrayFp","getAttributeFromProfiles","attribute","ProfileForm","clickHandler","name","initialName","imageData","initialImageData","submitHandler","title","isPending","useSelector","setName","BackIcon","onSubmit","preventDefault","backToProfileList","EmptyImage","click","ButtonPicture","onChange","type","TextField","label","Button","color","disabled","size","variant","CircularProgress","createProfileError","payload","uploadImageFinished","CreateProfileForm","restProps","dispatch","useDispatch","formData","createProfile","ProfilePicker","mode","PlusIcon","AuthActionsType","ProfilePickerList","profiles","map","profileId","setProfileId","ProfilePickerSection","listProfiles","setMode","PageLoader","appDataLoaded","Gentleman","Array","from","index","DatabaseColumns","authSelector","errorMessageSelector","isAuthenticatedSelector","isPendingAuthSelector","errorMessage","appDataLoadedSelector","profilesData","Page","selectedProfileId","loginActionError","loginError","App","theme","useMemo","createMuiTheme","palette","useEffect","password","prompt","indexedDB","deleteDatabase","login","ThemeProvider","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseErrorHandler","error","console","getData","values","keys","Object","data","i","length","push","databaseSuccessHandler","response","actions","val","databaseHandler","firebase","database","on","Firebase","isAuthenticated","initializeApp","profilesActions","fetchProfilesSuccess","setTimeout","initialState","loginSuccess","state","seletedProfileId","createProfileSuccess","fetchProfilesError","reducers","auth","action","createRootReducer","combineReducers","signInWithEmailAndPassword","put","code","watchAuth","all","takeEvery","uploadImage","path","uploadTask","storage","channel","eventChannel","emit","snapshot","getDownloadURL","then","CommonActionsType","watchCommonStore","uploadFile","afterUploadImageHandler","generateProfileId","characters","splice","charAt","Math","floor","random","find","join","getRefDatabase","refDataBase","child","select","take","set","online","watchProfiles","watches","sagaMiddlewareRuns","sagaMiddleware","watch","run","createSagaMiddleware","configureStore","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c72d6970.chunk.js","sourcesContent":["export enum LocalStorageKey {\r\n  profileId = 'profileId',\r\n  marginOffset = 'MARGIN_OFFSET'\r\n}\r\n\r\nexport enum StoragePath {\r\n  profiles = 'PROFILES',\r\n}\r\n","export default __webpack_public_path__ + \"static/media/error.6a233495.svg\";","import { FunctionComponent } from 'react';\r\n\r\n// others\r\nimport Background from '../../assets/images/backgrounds/error.svg';\r\n\r\n// styles\r\nimport './error-page-styles.scss';\r\n\r\nconst ErrorPage: FunctionComponent = () => (\r\n  <section className=\"ErrorPage\">\r\n    <img\r\n      alt=\"background-error\"\r\n      className=\"ErrorPage__background\"\r\n      src={Background}\r\n    />\r\n  </section>\r\n);\r\n\r\nexport default ErrorPage;\r\n","export default __webpack_public_path__ + \"static/media/send-icon.d7969ca4.svg\";","// @ts-nocheck\r\nimport {\r\n  forwardRef,\r\n  ForwardRefExoticComponent,\r\n  RefAttributes,\r\n  useState,\r\n} from 'react';\r\n\r\n// others\r\nimport SendIcon from '../../../assets/images/icons/send-icon.svg';\r\n\r\n// styles\r\nimport './chat-input-styles.scss';\r\n\r\ntype TProps = {\r\n  inputHandler: (event: Event) => void;\r\n};\r\n\r\nconst ChatInput: ForwardRefExoticComponent<\r\n  TProps & RefAttributes<HTMLDivElement>\r\n> = forwardRef<HTMLDivElement, TProps>(({ inputHandler }, ref) => {\r\n  const [visibilityPlaceholder, setVisibilityPlaceholder] = useState(true);\r\n\r\n  const onBlurHandler = (event: Event): void => {\r\n    const { target } = event;\r\n\r\n    if (target.innerText === '') {\r\n      setVisibilityPlaceholder(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ChatInput\" ref={ref}>\r\n      <p\r\n        className=\"ChatInput__text-field\"\r\n        contentEditable={true}\r\n        onBlur={onBlurHandler}\r\n        onFocus={() => setVisibilityPlaceholder(false)}\r\n        onInput={inputHandler}\r\n        suppressContentEditableWarning\r\n      />\r\n      {visibilityPlaceholder && (\r\n        <span className=\"ChatInput__placeholder\">Message #Meetings:</span>\r\n      )}\r\n      <img alt=\"send-icon\" className=\"ChatInput__send-icon\" src={SendIcon} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ChatInput;\r\n","import { forwardRef, ForwardRefExoticComponent, RefAttributes } from 'react';\r\n\r\n// styles\r\nimport './chat-messages-styles.scss';\r\n\r\nconst ChatMessages: ForwardRefExoticComponent<RefAttributes<HTMLDivElement>> =\r\n  forwardRef<HTMLDivElement, {}>((_, ref) => {\r\n    return <div className=\"ChatMessages\" ref={ref}></div>;\r\n  });\r\n\r\nexport default ChatMessages;\r\n","// @ts-nocheck\nimport { createContext, FunctionComponent, ReactNode, useState } from 'react';\n\n// other\nimport { LocalStorageKey } from '../../enums';\n\ntype TProps = {\n  children: ReactNode;\n};\n\nexport const Context: React.Context<any> = createContext({\n  margin: 0,\n  setMargin: () => {},\n});\n\nconst getMarginFromLocalStorage = (): number =>\n  parseInt(localStorage.getItem(LocalStorageKey.marginOffset) || 0);\n\nconst ContextProvider: FunctionComponent<TProps> = ({ children }) => {\n  const [margin, setMargin] = useState(getMarginFromLocalStorage());\n\n  const setMarginHandler = (value: number): void => {\n    if (margin > 0 || value !== -1) {\n      const result = margin + value;\n      setMargin(result);\n      localStorage.setItem(LocalStorageKey.marginOffset, result);\n    }\n  };\n\n  return (\n    <Context.Provider value={{ margin, setMargin: setMarginHandler }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport default ContextProvider;\n","// @ts-nocheck\r\nexport const REDUCER_KEY = 'profiles';\r\n\r\nexport enum ProfilesActionsType {\r\n  createProfile = `${REDUCER_KEY}/createProfile`,\r\n  createProfileSuccess = `${REDUCER_KEY}/createProfileSuccess`,\r\n  createProfileError = `${REDUCER_KEY}/createProfileError`,\r\n  fetchProfilesSuccess = `${REDUCER_KEY}/fetchProfilesSuccess`,\r\n  fetchProfilesError = `${REDUCER_KEY}/fetchProfilesError`,\r\n  uploadImageFinished = `${REDUCER_KEY}/uploadImageFinished`,\r\n  setProfileId = `${REDUCER_KEY}/setProfileId`,\r\n}\r\n","// @ts-nocheck\r\nimport { FunctionComponent, useContext, useRef } from 'react';\r\n\r\n// components\r\nimport ChatInput from './ChatInput/ChatInput';\r\nimport ChatMessages from './ChatMessages/ChatMessages';\r\n\r\n// core\r\nimport { Context } from '../../core/ContextProvider/ContextProvider';\r\n\r\n// others\r\nimport { TContext } from '../../core/ContextProvider/types';\r\n\r\n// styles\r\nimport './chat-styles.scss';\r\n\r\nconst Chat: FunctionComponent<{}> = () => {\r\n  const messagesRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  const { margin }: TContext = useContext(Context);\r\n\r\n  const onInputHandler = (): void => {\r\n    const height = inputRef.current.clientHeight;\r\n    messagesRef.current.style.height = `calc(100% - ${height}px)`;\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className=\"Chat\"\r\n      style={{ height: `calc(100vh - ${80 + margin}px)` }}\r\n    >\r\n      <ChatMessages ref={messagesRef} />\r\n      <ChatInput inputHandler={onInputHandler} ref={inputRef} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","export default __webpack_public_path__ + \"static/media/close-outlined-icon.91205169.svg\";","import { FunctionComponent } from 'react';\r\n\r\n// others\r\nimport CloseOutlinedIcon from '../../assets/images/icons/close-outlined-icon.svg';\r\n\r\n// styles\r\nimport './nav-menu-styles.scss';\r\n\r\ntype TProps = {\r\n  visible: boolean;\r\n  setVisible: (flag: boolean) => void;\r\n};\r\n\r\nconst NavMenu: FunctionComponent<TProps> = ({ visible, setVisible }) => {\r\n  const onClickHandler = (): void => setVisible(false);\r\n\r\n  return (\r\n    <div\r\n      className={`NavMenu ${visible && 'NavMenu--visible'}`}\r\n      onClick={onClickHandler}\r\n    >\r\n      <div\r\n        className={`NavMenu__background ${\r\n          visible && 'NavMenu__background--visible'\r\n        }`}\r\n      />\r\n      <div\r\n        className={`NavMenu__container ${\r\n          visible && 'NavMenu__container--visible'\r\n        }`}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <div className=\"NavMenu__header\">\r\n          <div className=\"NavMenu__button-close\">\r\n            <img\r\n              alt=\"close-outlined-icon\"\r\n              onClick={onClickHandler}\r\n              src={CloseOutlinedIcon}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavMenu;\r\n","export default __webpack_public_path__ + \"static/media/close-icon.51d90ac8.svg\";","export default __webpack_public_path__ + \"static/media/gear-icon.7598d1ce.svg\";","export default __webpack_public_path__ + \"static/media/modify-size-icon.54599b76.svg\";","// @ts-nocheck\r\nimport { FunctionComponent, useContext, useState } from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n// core\r\nimport { Context } from '../../../core/ContextProvider/ContextProvider';\r\n\r\n// others\r\nimport CloseIcon from '../../../assets/images/icons/close-icon.svg';\r\nimport GearIcon from '../../../assets/images/icons/gear-icon.svg';\r\nimport ModifySizeIcon from '../../../assets/images/icons/modify-size-icon.svg';\r\nimport { TContext } from '../../../core/ContextProvider/types';\r\n\r\n// styles\r\nimport './page-header-settings-menu-styles.scss';\r\n\r\nconst PageHeaderSettingsMenu: FunctionComponent<{}> = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const { setMargin }: TContext = useContext(Context);\r\n  const onClickOpenHandler = (event: Event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onClickCloseHandler = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"PageHeaderSettingsMenu\">\r\n      <img alt=\"gear-icon\" onClick={onClickOpenHandler} src={GearIcon} />\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={onClickCloseHandler}\r\n      >\r\n        <MenuItem\r\n          className=\"PageHeaderSettingsMenu__item\"\r\n          onClick={() => setMargin(1)}\r\n        >\r\n          Up\r\n          <img alt=\"gear-icon\" src={ModifySizeIcon} />\r\n        </MenuItem>\r\n        <MenuItem\r\n          className=\"PageHeaderSettingsMenu__item\"\r\n          onClick={() => setMargin(-1)}\r\n        >\r\n          Down\r\n          <img\r\n            alt=\"reverted-gear-icon\"\r\n            className=\"PageHeaderSettingsMenu__icon-rotate\"\r\n            src={ModifySizeIcon}\r\n          />\r\n        </MenuItem>\r\n        <MenuItem\r\n          className=\"PageHeaderSettingsMenu__item\"\r\n          onClick={onClickCloseHandler}\r\n        >\r\n          Close\r\n          <img alt=\"close-icon\" src={CloseIcon} />\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\nexport default PageHeaderSettingsMenu;\r\n","export default __webpack_public_path__ + \"static/media/hamburger-menu.85ddbb0d.svg\";","import { FunctionComponent, useState } from 'react';\r\n\r\n// components\r\nimport NavMenu from '../NavMenu/NavMenu';\r\nimport PageHeaderSettingsMenu from './PageHeaderSettingsMenu/PageHeaderSettingsMenu';\r\n\r\n// others\r\nimport HamburgerMenu from '../../assets/images/icons/hamburger-menu.svg';\r\n\r\n// styles\r\nimport './page-header-styles.scss';\r\n\r\nconst PageHeader: FunctionComponent<{}> = () => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <header className=\"PageHeader\">\r\n      {/* LEFT COLUMN */}\r\n      <div className=\"PageHeader__left-column\">\r\n        {/* PICKER */}\r\n        <div className=\"PageHeader__channel-picker\">ME</div>\r\n\r\n        {/* DETAILS */}\r\n        <div>\r\n          <p className=\"PageHeader__title\">#Meetings</p>\r\n          <p className=\"PageHeader__users\">2 Brothers online</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* RIGHT COLUMN */}\r\n      <div className=\"PageHeader__right-column\">\r\n        <PageHeaderSettingsMenu />\r\n        <img\r\n          alt=\"hamburger-menu\"\r\n          className=\"PageHeader__hamburger-menu\"\r\n          onClick={() => setVisible(true)}\r\n          src={HamburgerMenu}\r\n        />\r\n      </div>\r\n\r\n      {/* Nav Left Menu */}\r\n      <NavMenu visible={visible} setVisible={setVisible} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","export default __webpack_public_path__ + \"static/media/back.3f83d067.svg\";","export default __webpack_public_path__ + \"static/media/button-picture.9659aaae.svg\";","export default __webpack_public_path__ + \"static/media/empty-image.16de0a9b.svg\";","// @ts-nocheck\r\n// others\r\n\r\nconst loadImage = (\r\n  event: Event,\r\n  setImageData: (file: string | ArrayBuffer | null) => void\r\n) => {\r\n  const reader = new FileReader();\r\n  const { files } = event.target;\r\n\r\n  reader.onload = (e) => {\r\n    setImageData({\r\n      file: files[0],\r\n      src: e.target.result,\r\n    });\r\n  };\r\n\r\n  reader.readAsDataURL(files[0]);\r\n};\r\n\r\nexport default loadImage;\r\n","import getFp from 'lodash/fp/get';\r\nimport isArrayFp from 'lodash/fp/isArray';\r\nimport composeFp from 'lodash/fp/compose';\r\nimport { createSelector, Selector } from 'reselect';\r\n\r\n// store\r\nimport { REDUCER_KEY } from './actionsType';\r\nimport { TMainState } from '../../types';\r\nimport { TProfile, TProfilesState } from './types';\r\n\r\nexport const profilesSelector: Selector<TMainState, TProfilesState> =\r\n  getFp(REDUCER_KEY);\r\n\r\nexport const isPendingSelector: Selector<TMainState, boolean | undefined> =\r\n  createSelector(profilesSelector, getFp('isPending'));\r\n\r\nexport const profilesLoadedSelector: Selector<TMainState, boolean> =\r\n  createSelector(profilesSelector, composeFp(isArrayFp, getFp('data')));\r\n\r\nexport const getAttributeFromProfiles = (\r\n  attribute: string\r\n): Selector<TMainState, Array<TProfile>> =>\r\n  createSelector(profilesSelector, getFp(attribute));\r\n","export enum Mode {\r\n  createProfile = 'createProfile',\r\n  listProfiles = 'listProfiles',\r\n}\r\n","// @ts-nocheck\r\nimport { FunctionComponent, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// others\r\nimport BackIcon from '../../assets/images/icons/back.svg';\r\nimport ButtonPicture from '../../assets/images/icons/button-picture.svg';\r\nimport EmptyImage from '../../assets/images/icons/empty-image.svg';\r\nimport { TImageData } from '../../types';\r\nimport { TProfileFormData } from '../../store/profiles/types';\r\n\r\n// services\r\nimport loadImage from './services/loadImage';\r\n\r\n// store\r\nimport { isPendingSelector } from '../../store/profiles/selectors';\r\n\r\n// styles\r\nimport './profile-form-styles.scss';\r\n\r\ntype TProps = {\r\n  clickHandler: () => void;\r\n  name?: string;\r\n  imageData?: TImageData;\r\n  submitHandler: (formData: TProfileFormData) => void;\r\n  title: string;\r\n};\r\n\r\nconst ProfileForm: FunctionComponent<TProps> = ({\r\n  clickHandler,\r\n  name: initialName = '',\r\n  imageData: initialImageData = null,\r\n  submitHandler,\r\n  title,\r\n}) => {\r\n  const isPending = useSelector(isPendingSelector);\r\n  const inputRef = useRef(null);\r\n  const [imageData, setImageData] = useState(initialImageData);\r\n  const [name, setName] = useState(initialName);\r\n\r\n  const onSubmitHandler = (event: Event) => {\r\n    event.preventDefault();\r\n\r\n    if (imageData && name) {\r\n      submitHandler({ backToProfileList: clickHandler, imageData, name });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ProfileForm__form-wrapper\">\r\n      <h2 className=\"ProfileForm__title\">\r\n        <img\r\n          alt=\"back-icon\"\r\n          className=\"ProfileForm__icon\"\r\n          onClick={clickHandler}\r\n          src={BackIcon}\r\n        />\r\n        {title}\r\n      </h2>\r\n\r\n      {/* FORM */}\r\n      <form className=\"ProfileForm\" onSubmit={onSubmitHandler}>\r\n        {/* AVATAR */}\r\n        <div\r\n          className={`ProfileForm__avatar ${\r\n            imageData ? 'ProfileForm__avatar--selected' : ''\r\n          }`}\r\n        >\r\n          {imageData ? (\r\n            <img\r\n              alt=\"avatar\"\r\n              className=\"ProfileForm__image\"\r\n              src={imageData.src}\r\n            />\r\n          ) : (\r\n            <img\r\n              alt=\"empty\"\r\n              className=\"ProfileForm__empty-picture\"\r\n              src={EmptyImage}\r\n            />\r\n          )}\r\n\r\n          {/* BUTTON */}\r\n          <img\r\n            alt=\"button-icon\"\r\n            className=\"ProfileForm__button-picture\"\r\n            onClick={() => inputRef.current.click()}\r\n            src={ButtonPicture}\r\n          />\r\n          <input\r\n            className=\"ProfileForm__input-file\"\r\n            onChange={(event: Event) => loadImage(event, setImageData)}\r\n            ref={inputRef}\r\n            type=\"file\"\r\n          />\r\n        </div>\r\n\r\n        {/* INPUT NAME */}\r\n        <TextField\r\n          className=\"ProfileForm__input-name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          label=\"Profile name:\"\r\n          value={name}\r\n        />\r\n\r\n        <Button\r\n          className=\"ProfileForm__submit-button\"\r\n          color=\"primary\"\r\n          disabled={isPending}\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n        >\r\n          Create Profile\r\n          {isPending && (\r\n            <CircularProgress\r\n              className=\"ProfileForm__spinner\"\r\n              color=\"primary\"\r\n              size={20}\r\n            />\r\n          )}\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileForm;\r\n","// others\r\nimport { TReturnablePayload } from './../common/types';\r\nimport {\r\n  TCreateProfile,\r\n  TCreateProfileSuccess,\r\n  TCreateProfileError,\r\n  TFetchProfilesSuccess,\r\n  TFetchProfilesError,\r\n  TProfile,\r\n  TProfileFormData,\r\n  TUploadImageFinished,\r\n  TSetProfileId,\r\n} from './types';\r\n\r\n// store\r\nimport { ProfilesActionsType } from './actionsType';\r\n\r\nexport const createProfile = (payload: TProfileFormData): TCreateProfile => ({\r\n  type: ProfilesActionsType.createProfile,\r\n  payload,\r\n});\r\n\r\nexport const createProfileSuccess = (): TCreateProfileSuccess => ({\r\n  type: ProfilesActionsType.createProfileSuccess,\r\n});\r\n\r\nexport const createProfileError = (payload: string): TCreateProfileError => ({\r\n  type: ProfilesActionsType.createProfileError,\r\n  payload,\r\n});\r\n\r\nexport const fetchProfilesSuccess = (\r\n  payload: Array<TProfile>\r\n): TFetchProfilesSuccess => ({\r\n  type: ProfilesActionsType.fetchProfilesSuccess,\r\n  payload,\r\n});\r\n\r\nexport const fetchProfilesError = (): TFetchProfilesError => ({\r\n  type: ProfilesActionsType.fetchProfilesError,\r\n});\r\n\r\nexport const uploadImageFinished = (\r\n  payload: TReturnablePayload\r\n): TUploadImageFinished => ({\r\n  type: ProfilesActionsType.uploadImageFinished,\r\n  payload,\r\n});\r\n\r\nexport const setProfileId = (payload: string): TSetProfileId => ({\r\n  type: ProfilesActionsType.setProfileId,\r\n  payload,\r\n});\r\n","import { FunctionComponent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// components\r\nimport ProfileForm from '../ProfileForm/ProfileForm';\r\n\r\n// store\r\nimport { createProfile } from '../../store/profiles/actions';\r\nimport { TProfileFormData } from '../../store/profiles/types';\r\n\r\nconst CreateProfileForm: FunctionComponent = ({ ...restProps }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (formData: TProfileFormData) =>\r\n    dispatch(createProfile(formData));\r\n\r\n  return (\r\n    //@ts-ignore\r\n    <ProfileForm\r\n      submitHandler={submitHandler}\r\n      title=\"Create Profile:\"\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CreateProfileForm;\r\n","export default __webpack_public_path__ + \"static/media/plus.c453ef1e.svg\";","import { FunctionComponent } from 'react';\r\n\r\n// others\r\nimport PlusIcon from '../../assets/images/icons/plus.svg';\r\n\r\n// styles\r\nimport './profile-picker-styles.scss';\r\n\r\ntype TProps = {\r\n  clickHandler: () => void;\r\n  mode?: 'add' | 'select';\r\n  name?: string;\r\n  src?: string;\r\n};\r\n\r\nconst ProfilePicker: FunctionComponent<TProps> = ({\r\n  clickHandler,\r\n  mode = 'add',\r\n  name,\r\n  src,\r\n}) => {\r\n  return (\r\n    <section\r\n      className={`ProfilePicker ProfilePicker--${mode}`}\r\n      onClick={clickHandler}\r\n    >\r\n      {/* TITLE */}\r\n      <p className={`ProfilePicker__title ProfilePicker--${mode}__title`}>\r\n        {name ? name : 'Create:'}\r\n      </p>\r\n\r\n      {/* CIRCLE */}\r\n      <div className={`ProfilePicker__button ProfilePicker--${mode}__button`}>\r\n        <img\r\n          alt={name ? `${name}-avatar` : 'icon'}\r\n          className={`ProfilePicker__image ProfilePicker--${mode}__image`}\r\n          src={src ? src : PlusIcon}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProfilePicker;\r\n","// @ts-nocheck\r\nexport const REDUCER_KEY = 'auth';\r\n\r\nexport enum AuthActionsType {\r\n  login = `${REDUCER_KEY}/login`,\r\n  loginSuccess = `${REDUCER_KEY}/loginSuccess`,\r\n  loginError = `${REDUCER_KEY}/loginError`,\r\n}\r\n","import { FunctionComponent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// components\r\nimport ProfilePicker from '../ProfilePicker/ProfilePicker';\r\n\r\n// others\r\nimport { Mode } from '../ProfilePickerSection/enums';\r\nimport { TProfile } from '../../store/profiles/types';\r\n\r\n// store\r\nimport { setProfileId } from '../../store/profiles/actions';\r\nimport { getAttributeFromProfiles } from '../../store/profiles/selectors';\r\n\r\n// styles\r\nimport './profile-picker-list-styles.scss';\r\n\r\ntype TProps = {\r\n  clickHandler: (mode: Mode) => void;\r\n};\r\n\r\nconst ProfilePickerList: FunctionComponent<TProps> = ({ clickHandler }) => {\r\n  const dispatch = useDispatch();\r\n  const profiles: Array<TProfile> = useSelector(\r\n    getAttributeFromProfiles('data')\r\n  );\r\n\r\n  return (\r\n    <section className=\"ProfilePickerList\">\r\n      {/* CONTENT */}\r\n      <h1 className=\"ProfilePickerList__title\">Choose a brother-in-law:</h1>\r\n      <p className=\"ProfilePickerList__description\">\r\n        Select a profile to start a conversation with your brother-in-law.\r\n      </p>\r\n\r\n      {/* PICKERS */}\r\n      <div className=\"ProfilePickerList__pickers\">\r\n        <ProfilePicker clickHandler={() => clickHandler(Mode.createProfile)} />\r\n\r\n        {/* LIST */}\r\n        {/* @ts-ignore */}\r\n        {profiles.map(({ name, profileId, src }) => (\r\n          <ProfilePicker\r\n            clickHandler={() => dispatch(setProfileId(profileId))}\r\n            key={profileId}\r\n            mode=\"select\"\r\n            name={name}\r\n            src={src}\r\n          />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProfilePickerList;\r\n","import { FunctionComponent, useState } from 'react';\r\n\r\n// components\r\nimport CreateProfileForm from '../CreateProfileForm/CreateProfileForm';\r\nimport ProfilePickerList from '../ProfilePickerList/ProfilePickerList';\r\n\r\n// others\r\nimport { Mode } from './enums';\r\n\r\n// styles\r\nimport './profile-picker-section-styles.scss';\r\n\r\nconst ProfilePickerSection: FunctionComponent = () => {\r\n  const [mode, setMode] = useState(Mode.listProfiles);\r\n\r\n  const onClickBackHandler = (): void => setMode(Mode.listProfiles);\r\n\r\n  return (\r\n    <section className=\"ProfilePickerSection\">\r\n      {mode === Mode.listProfiles ? (\r\n        // LIST\r\n        <ProfilePickerList clickHandler={(mode: Mode) => setMode(mode)} />\r\n      ) : (\r\n        // @ts-ignore\r\n        <CreateProfileForm clickHandler={onClickBackHandler} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProfilePickerSection;\r\n","export default __webpack_public_path__ + \"static/media/gentleman.ff3326dc.svg\";","import { FunctionComponent } from 'react';\r\n\r\n// others\r\nimport Gentleman from '../../assets/images/backgrounds/gentleman.svg';\r\n\r\n// styles\r\nimport './page-loader-styles.scss';\r\n\r\ntype TProps = {\r\n  appDataLoaded: boolean;\r\n};\r\n\r\nconst PageLoader: FunctionComponent<TProps> = ({ appDataLoaded }) => (\r\n  <div className=\"PageLoader\">\r\n    <h2 className=\"PageLoader__title\">WELCOME GENTLEMAN</h2>\r\n    {/* LOGO */}\r\n    <img alt=\"gentleman-logo\" src={Gentleman} />\r\n\r\n    {/* SPINNER */}\r\n    <div className=\"PageLoader__spinner\">\r\n      {Array.from(Array(12)).map((_, index) => (\r\n        <div\r\n          className={`PageLoader__circle PageLoader__circle--${index + 1}`}\r\n          key={index}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default PageLoader;\r\n","// @ts-nocheck\r\nimport getFp from 'lodash/fp/get';\r\nimport { createSelector, Selector } from 'reselect';\r\n\r\n// store\r\nimport { REDUCER_KEY } from './actionsType';\r\nimport { TMainState } from '../../types';\r\nimport { TLocationState } from './types';\r\n\r\nexport const authSelector: Selector<TMainState, TLocationState> =\r\n  getFp(REDUCER_KEY);\r\n\r\nexport const errorMessageSelector: Selector<TMainState, boolean> =\r\n  createSelector(authSelector, getFp('error'));\r\n\r\nexport const isPendingSelector: Selector<TMainState, boolean> = createSelector(\r\n  authSelector,\r\n  getFp('isPending')\r\n);\r\n","export enum DatabaseColumns {\r\n  profiles = 'profiles',\r\n}\r\n","import { createSelector, Selector } from 'reselect';\r\n\r\n// others\r\nimport { TMainState } from '../types';\r\n\r\n// store\r\nimport {\r\n  isPendingSelector as isPendingAuthSelector,\r\n  errorMessageSelector,\r\n} from './auth/selectors';\r\nimport { profilesLoadedSelector } from './profiles/selectors';\r\n\r\nexport const isAuthenticatedSelector: Selector<TMainState, boolean> =\r\n  createSelector(\r\n    isPendingAuthSelector,\r\n    errorMessageSelector,\r\n    (isPending, errorMessage) => !isPending && !errorMessage\r\n  );\r\n\r\nexport const appDataLoadedSelector: Selector<TMainState, boolean> =\r\n  createSelector(profilesLoadedSelector, (profilesData) => profilesData);\r\n","import { FunctionComponent } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// components\r\nimport Chat from '../Chat/Chat';\r\nimport PageHeader from '../PageHeader/PageHeader';\r\nimport ProfilePicker from '../ProfilePickerSection/ProfilePickerSection';\r\nimport PageLoader from '../PageLoader/PageLoader';\r\n\r\n// store\r\nimport { getAttributeFromProfiles } from '../../store/profiles/selectors';\r\nimport { appDataLoadedSelector } from '../../store/selectors';\r\n\r\n// styles\r\nimport './page-styles.scss';\r\n\r\nconst Page: FunctionComponent<{}> = () => {\r\n  const selectedProfileId = useSelector(\r\n    getAttributeFromProfiles('seletedProfileId')\r\n  );\r\n  const appDataLoaded = useSelector(appDataLoadedSelector);\r\n\r\n  if (!appDataLoaded) {\r\n    return <PageLoader appDataLoaded={appDataLoaded} />;\r\n  }\r\n\r\n  if (!selectedProfileId) {\r\n    return <ProfilePicker />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Page\">\r\n      <PageHeader />\r\n      <Chat />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","// store\r\nimport { AuthActionsType } from './actionsType';\r\nimport { TLogin, TLoginSuccess, TLoginError } from './types';\r\n\r\nexport const loginAction = (payload: string): TLogin => ({\r\n  type: AuthActionsType.login,\r\n  payload,\r\n});\r\n\r\nexport const loginActionSuccess = (payload: string): TLoginSuccess => ({\r\n  type: AuthActionsType.loginSuccess,\r\n  payload,\r\n});\r\n\r\nexport const loginActionError = (payload: string): TLoginError => ({\r\n  type: AuthActionsType.loginError,\r\n  payload,\r\n});\r\n","import { useEffect, useMemo, FunctionComponent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\n// components\r\nimport ErrorPage from '../ErrorPage/ErrorPage';\r\nimport Page from '../Page/Page';\r\n\r\n// core\r\nimport ContextProvider from '../../core/ContextProvider/ContextProvider';\r\n\r\n// store\r\nimport {\r\n  errorMessageSelector,\r\n  isPendingSelector,\r\n} from '../../store/auth/selectors';\r\nimport { loginAction } from '../../store/auth/actions';\r\n\r\nconst App: FunctionComponent<{}> = () => {\r\n  const isPending = useSelector(isPendingSelector);\r\n  const dispatch = useDispatch();\r\n  const errorMessage = useSelector(errorMessageSelector);\r\n\r\n  const theme = useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: 'dark',\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    const password = prompt('Please enter a password:');\r\n    indexedDB.deleteDatabase('firebaseLocalStorageDb');\r\n    dispatch(loginAction(password as string));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (isPending) {\r\n    return null;\r\n  }\r\n\r\n  if (errorMessage) {\r\n    return <ErrorPage />;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ContextProvider>\r\n        <Page />\r\n      </ContextProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const config = {\r\n  apiKey: 'AIzaSyBYQ05TbRrP2wVEX7NDn5CWodoAnnkpcOY',\r\n  authDomain: 'comics-book.firebaseapp.com',\r\n  projectId: 'comics-book',\r\n  storageBucket: 'comics-book.appspot.com',\r\n  messagingSenderId: '426496482303',\r\n  appId: '1:426496482303:web:ebf257ff0a64a90f6ae5ca',\r\n};\r\n","const databaseErrorHandler = (error: string): void => {\r\n  // eslint-disable-next-line\r\n  console.error(error);\r\n};\r\n\r\nexport default databaseErrorHandler;\r\n","// @ts-nocheck\r\nconst getData = (values: any): void => {\r\n  const keys = Object.keys(values);\r\n  const data = [];\r\n\r\n  for (let i = 0; i < keys.length; i++) {\r\n    data.push(values[keys[i]]);\r\n  }\r\n  return data;\r\n};\r\n\r\nconst databaseSuccessHandler = (\r\n  response: any,\r\n  actions: (data: any) => void = null\r\n): void => {\r\n  const values = response.val();\r\n  actions(getData(values || {}));\r\n};\r\n\r\nexport default databaseSuccessHandler;\r\n","// others\r\nimport { DatabaseColumns } from '../enums';\r\n\r\n// services\r\nimport databaseErrorHandler from './databaseErrorHandler';\r\nimport databaseSuccessHandler from './databaseSuccessHandler';\r\n\r\nconst databaseHandler = (\r\n  firebase: any,\r\n  actions: (data: any) => void,\r\n  ref: DatabaseColumns\r\n) => {\r\n  firebase\r\n    .database()\r\n    .ref(ref)\r\n    .on(\r\n      'value',\r\n      (response: any) => databaseSuccessHandler(response, actions),\r\n      databaseErrorHandler\r\n    );\r\n};\r\n\r\nexport default databaseHandler;\r\n","// @ts-nocheck\r\nimport { FunctionComponent, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport firebase from 'firebase';\r\n\r\n// others\r\nimport { config } from './constants';\r\nimport { DatabaseColumns } from './enums';\r\nimport { TProfile } from '../../store/profiles/types';\r\n\r\n// store\r\nimport { isAuthenticatedSelector } from '../../store/selectors';\r\nimport { fetchProfilesSuccess } from '../../store/profiles/actions';\r\n\r\n// services\r\nimport databaseHandler from './services/databaseHandler';\r\n\r\nconst Firebase: FunctionComponent<{}> = () => {\r\n  const isAuthenticated = useSelector(isAuthenticatedSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    firebase.initializeApp(config);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const profilesActions = (payload: Array<TProfile>): void => {\r\n      dispatch(fetchProfilesSuccess(payload));\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n      setTimeout(() => {\r\n        databaseHandler(firebase, profilesActions, DatabaseColumns.profiles);\r\n      }, 5000);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [isAuthenticated]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default Firebase;\r\n","// @ts-nocheck\r\n// others\r\nimport { TLoginError, TLoginSuccess } from './types';\r\n\r\n// store\r\nimport { AuthActionsType } from './actionsType';\r\nimport { TAnyAction } from '../../types';\r\nimport { TAuthState } from './types';\r\n\r\nconst initialState: TAuthState = {\r\n  error: '',\r\n  isPending: true,\r\n  profileId: '',\r\n};\r\n\r\nconst loginSuccess = (\r\n  state: TAuthState,\r\n  { payload: profileId }: TLoginSuccess\r\n): TAuthState => ({\r\n  ...state,\r\n  isPending: false,\r\n  profileId,\r\n});\r\n\r\nconst loginError = (\r\n  state: TAuthState,\r\n  { payload: error }: TLoginError\r\n): TAuthState => ({\r\n  ...state,\r\n  error,\r\n  isPending: false,\r\n});\r\n\r\nconst auth = (\r\n  state: TAuthState = initialState,\r\n  action: TAnyAction\r\n): TAuthState => {\r\n  switch (action.type) {\r\n    case AuthActionsType.loginSuccess:\r\n      return loginSuccess(state, action);\r\n    case AuthActionsType.loginError:\r\n      return loginError(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default auth;\r\n","// @ts-nocheck\r\n// others\r\nimport {\r\n  TCreateProfileError,\r\n  TFetchProfilesSuccess,\r\n  TProfilesState,\r\n  TSetProfileId,\r\n} from './types';\r\n\r\n// store\r\nimport { ProfilesActionsType } from './actionsType';\r\nimport { TAnyAction } from '../../types';\r\n\r\nconst initialState: TProfilesState = {\r\n  data: null,\r\n  error: '',\r\n  isPending: true,\r\n  seletedProfileId: '',\r\n};\r\n\r\nconst createProfile = (state: TAuthState): TAuthState => ({\r\n  ...state,\r\n  isPending: true,\r\n});\r\n\r\nconst createProfileSuccess = (state: TAuthState): TAuthState => ({\r\n  ...state,\r\n  isPending: false,\r\n});\r\n\r\nconst createProfileError = (\r\n  state: TAuthState,\r\n  { payload: error }: TCreateProfileError\r\n): TAuthState => ({\r\n  ...state,\r\n  error,\r\n  isPending: false,\r\n});\r\n\r\nconst fetchProfilesSuccess = (\r\n  state: TAuthState,\r\n  { payload: data }: TFetchProfilesSuccess\r\n): TAuthState => ({\r\n  ...state,\r\n  isPending: false,\r\n  data,\r\n});\r\n\r\nconst fetchProfilesError = (state: TAuthState): TAuthState => ({\r\n  ...state,\r\n  isPending: false,\r\n});\r\n\r\nconst setProfileId = (\r\n  state: TAuthState,\r\n  { payload: seletedProfileId }: TSetProfileId\r\n): TAuthState => ({\r\n  ...state,\r\n  seletedProfileId,\r\n});\r\n\r\nconst profiles = (\r\n  state: TAuthState = initialState,\r\n  action: TAnyAction\r\n): TAuthState => {\r\n  switch (action.type) {\r\n    case ProfilesActionsType.createProfile:\r\n      return createProfile(state, action);\r\n    case ProfilesActionsType.createProfileSuccess:\r\n      return createProfileSuccess(state, action);\r\n    case ProfilesActionsType.createProfileError:\r\n      return createProfileError(state, action);\r\n    case ProfilesActionsType.fetchProfilesSuccess:\r\n      return fetchProfilesSuccess(state, action);\r\n    case ProfilesActionsType.fetchProfilesError:\r\n      return fetchProfilesError(state, action);\r\n    case ProfilesActionsType.setProfileId:\r\n      return setProfileId(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default profiles;\r\n","// @ts-nocheck\r\nimport { combineReducers } from 'redux';\r\n\r\n// store\r\nimport auth from './auth/reducer';\r\nimport profiles from './profiles/reducer';\r\n\r\nconst reducers = { auth, profiles };\r\n\r\nconst createRootReducer = () =>\r\n  combineReducers({\r\n    ...reducers,\r\n  });\r\n\r\nexport default createRootReducer;\r\n","// @ts-nocheck\r\nimport { PutEffect, put } from 'redux-saga/effects';\r\nimport firebase from 'firebase';\r\n\r\n// others\r\nimport { EMAIL } from '../../constants';\r\nimport { LocalStorageKey } from '../../enums';\r\n\r\n// store\r\nimport { loginActionError, loginActionSuccess } from './actions';\r\n\r\nexport function* login(data: { payload: string }): Generator<PutEffect<any>> {\r\n  const password = data.payload;\r\n  const profileId = localStorage.getItem(LocalStorageKey.profileId) || '';\r\n\r\n  try {\r\n    yield firebase.auth().signInWithEmailAndPassword(EMAIL, password);\r\n    yield put(loginActionSuccess(profileId));\r\n  } catch (error) {\r\n    const { code } = error;\r\n    yield put(loginActionError(code));\r\n  }\r\n}\r\n","export const EMAIL = 'eryk.sandecki@gmail.com';\r\n","import { all, AllEffect, ForkEffect, takeEvery } from 'redux-saga/effects';\r\n\r\n// store\r\nimport { login } from './saga';\r\nimport { AuthActionsType } from './actionsType';\r\n\r\nexport function* watchAuth(): Generator<AllEffect<ForkEffect<any>>> {\r\n  yield all([\r\n    // @ts-ignore\r\n    takeEvery(AuthActionsType.login, login),\r\n  ]);\r\n}\r\n","// @ts-nocheck\r\nimport firebase from 'firebase';\r\nimport { eventChannel } from 'redux-saga';\r\nimport { PutEffect, put, takeEvery } from 'redux-saga/effects';\r\nimport { TFileUploadPayload } from './types';\r\n\r\nexport function* uploadImage({ payload }): Generator<PutEffect<any>> {\r\n  const { action, file, path }: TFileUploadPayload = payload;\r\n\r\n  try {\r\n    const uploadTask = firebase.storage().ref(path).put(file);\r\n    const channel = eventChannel((emit) =>\r\n      uploadTask.on('state_changed', emit)\r\n    );\r\n    let src = '';\r\n\r\n    yield takeEvery(channel, () => {});\r\n    yield uploadTask;\r\n    yield uploadTask.snapshot.ref\r\n      .getDownloadURL()\r\n      .then((response) => (src = response));\r\n    yield put(action({ result: 'success', src }));\r\n  } catch (error) {\r\n    yield put(action({ error, result: 'error' }));\r\n  }\r\n}\r\n","// @ts-nocheck\r\nexport const REDUCER_KEY = 'common';\r\n\r\nexport enum CommonActionsType {\r\n  uploadFile = `${REDUCER_KEY}/uploadFile`,\r\n}\r\n","import { all, AllEffect, ForkEffect, takeEvery } from 'redux-saga/effects';\r\n\r\n// store\r\nimport { uploadImage } from './saga';\r\nimport { CommonActionsType } from './actionsType';\r\n\r\nexport function* watchCommonStore(): Generator<AllEffect<ForkEffect<any>>> {\r\n  yield all([\r\n    // @ts-ignore\r\n    takeEvery(CommonActionsType.uploadFile, uploadImage),\r\n  ]);\r\n}\r\n","// @ts-nocheck\r\n//others\r\nimport { TReturnablePayload } from '../../../store/common/types';\r\n\r\nconst afterUploadImageHandler = ({\r\n  error,\r\n  result,\r\n  src,\r\n}: TReturnablePayload) => {\r\n  if (result === 'error') {\r\n    throw error;\r\n  }\r\n  return src;\r\n};\r\n\r\nexport default afterUploadImageHandler;\r\n","// others\r\nimport { TProfile } from './../../../store/profiles/types';\r\n\r\nconst generateProfileId = (data: Array<TProfile>) => {\r\n  const result: Array<string> = [];\r\n  const characters =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n  do {\r\n    result.splice(0, result.length);\r\n    for (let i = 0; i < 9; i++) {\r\n      result.push(\r\n        characters.charAt(Math.floor(Math.random() * characters.length))\r\n      );\r\n    }\r\n  } while (data.find(({ profileId }) => profileId === result.join('')));\r\n\r\n  return result.join('');\r\n};\r\n\r\nexport default generateProfileId;\r\n","import firebase from 'firebase';\r\n\r\nconst getRefDatabase = (path: Array<string>): firebase.database.Reference => {\r\n  let refDataBase = firebase.database().ref(path[0]);\r\n  for (let i = 1; i < path.length; i++) {\r\n    refDataBase = refDataBase.child(path[i]);\r\n  }\r\n  return refDataBase;\r\n};\r\n\r\nexport default getRefDatabase;\r\n","// others\r\nimport { TFileUploadPayload, TUploadFile } from './types';\r\n\r\n// store\r\nimport { CommonActionsType } from './actionsType';\r\n\r\nexport const uploadFile = (payload: TFileUploadPayload): TUploadFile => ({\r\n  type: CommonActionsType.uploadFile,\r\n  payload,\r\n});\r\n","// @ts-nocheck\r\nimport { PutEffect, take, put, select } from 'redux-saga/effects';\r\nimport { TProfileFormData } from './types';\r\n\r\n// others\r\nimport { DatabaseColumns } from '../../components/Firebase/enums';\r\nimport { StoragePath } from '../../enums';\r\n\r\n// services\r\nimport afterUploadImageHandler from '../../components/Firebase/services/afterUploadImageHandler';\r\nimport generateProfileId from '../../components/Firebase/services/generateProfileId';\r\nimport getRefDatabase from '../../components/Firebase/services/getRefDatabase';\r\n\r\n// store\r\nimport { ProfilesActionsType } from './actionsType';\r\nimport {\r\n  createProfileSuccess,\r\n  createProfileError,\r\n  uploadImageFinished,\r\n} from './actions';\r\nimport { uploadFile } from '../common/actions';\r\nimport { getAttributeFromProfiles } from './selectors';\r\n\r\nexport function* createProfile({ payload }): Generator<PutEffect<any>> {\r\n  const {\r\n    backToProfileList,\r\n    name,\r\n    imageData: { file },\r\n  }: TProfileFormData = payload;\r\n  const path = `${StoragePath.profiles}/${name}`;\r\n  const data = yield select(getAttributeFromProfiles('data'));\r\n  const profileId = generateProfileId(data);\r\n\r\n  try {\r\n    yield put(uploadFile({ action: uploadImageFinished, path, file }));\r\n\r\n    const { payload } = yield take(ProfilesActionsType.uploadImageFinished);\r\n    const src = afterUploadImageHandler(payload);\r\n\r\n    yield getRefDatabase([DatabaseColumns.profiles]).set([\r\n      ...data,\r\n      { name, online: false, profileId, src },\r\n    ]);\r\n    yield put(createProfileSuccess());\r\n    yield backToProfileList();\r\n  } catch (error) {\r\n    yield put(createProfileError(error));\r\n  }\r\n}\r\n","import { all, AllEffect, ForkEffect, takeEvery } from 'redux-saga/effects';\r\n\r\n// store\r\nimport { createProfile } from './saga';\r\nimport { ProfilesActionsType } from './actionsType';\r\n\r\nexport function* watchProfiles(): Generator<AllEffect<ForkEffect<any>>> {\r\n  yield all([\r\n    // @ts-ignore\r\n    takeEvery(ProfilesActionsType.createProfile, createProfile),\r\n  ]);\r\n}\r\n","// @ts-nocheck\r\nimport { SagaMiddleware } from 'redux-saga';\r\n\r\n// store\r\nimport { watchAuth } from './auth/watch';\r\nimport { watchCommonStore } from './common/watch';\r\nimport { watchProfiles } from './profiles/watch';\r\n\r\nconst watches = [watchAuth, watchCommonStore, watchProfiles];\r\n\r\nconst sagaMiddlewareRuns = (sagaMiddleware: SagaMiddleware): void => {\r\n  for (const watch of watches) sagaMiddleware.run(watch);\r\n};\r\n\r\nexport default sagaMiddlewareRuns;\r\n","// @ts-nocheck\r\nimport {\r\n  Action,\r\n  applyMiddleware,\r\n  CombinedState,\r\n  createStore,\r\n  Store,\r\n} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport thunk from 'redux-thunk';\r\n\r\n// store\r\nimport reducers from './reducers';\r\nimport sagaMiddlewareRuns from './watchers';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst configureStore = (): Store<CombinedState<any>, Action> => {\r\n  const store = createStore(\r\n    reducers(),\r\n    {},\r\n    composeWithDevTools(applyMiddleware(...[thunk], sagaMiddleware))\r\n  );\r\n  sagaMiddlewareRuns(sagaMiddleware);\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n// components\r\nimport App from './components/App/App';\r\nimport Firebase from './components/Firebase/Firebase';\r\n\r\n// store\r\nimport configureStore from './store/configureStore';\r\n\r\n// styles\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={configureStore()}>\r\n      <Firebase />\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}