{"version":3,"sources":["store/auth/actionsType.ts","assets/images/backgrounds/error.svg","components/ErrorContainer/ErrorContainer.tsx","assets/images/icons/close.svg","components/NavMenu/NavMenu.tsx","assets/images/icons/hamburger-menu.svg","components/PageHeader/PageHeader.tsx","components/Page/Page.tsx","store/auth/selectors.ts","components/App/App.tsx","store/auth/actions.ts","components/Firebase/constants.ts","components/Firebase/Firebase.tsx","store/auth/reducer.ts","store/reducers.ts","store/auth/saga.ts","constants.ts","store/auth/watch.ts","store/sagas.ts","store/configureStore.ts","index.tsx"],"names":["AuthActionsType","ErrorContainer","className","alt","src","Background","NavMenu","visible","setVisible","onClickHandler","onClick","e","stopPropagation","placeholder","CloseIcon","PageHeader","useState","HamburgerMenu","Main","authSelector","getFp","errorMessageSelector","createSelector","isPendingSelector","App","isPending","useSelector","dispatch","useDispatch","errorMessage","useEffect","payload","password","prompt","type","login","Page","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Firebase","firebase","initializeApp","initialState","error","loginSuccess","state","loginError","reducers","auth","action","createRootReducer","combineReducers","data","signInWithEmailAndPassword","put","code","watchAuth","all","takeEvery","watches","sagaMiddlewareRuns","sagaMiddleware","watch","run","createSagaMiddleware","configureStore","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61d05157.chunk.js","sourcesContent":["export const REDUCER_KEY = 'auth';\r\n\r\nexport enum AuthActionsType {\r\n  login = 'login',\r\n  loginSuccess = 'loginSuccess',\r\n  loginError = 'loginError',\r\n}\r\n","export default __webpack_public_path__ + \"static/media/error.6a233495.svg\";","import { FunctionComponent } from 'react';\r\n\r\n// others\r\nimport Background from '../../assets/images/backgrounds/error.svg';\r\n\r\n// styles\r\nimport './error-container-styles.scss';\r\n\r\nconst ErrorContainer: FunctionComponent<{}> = () => {\r\n  return (\r\n    <section className=\"Error\">\r\n      <img\r\n        alt=\"background-error\"\r\n        className=\"Error__background\"\r\n        src={Background}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ErrorContainer;\r\n","export default __webpack_public_path__ + \"static/media/close.91205169.svg\";","import { FunctionComponent } from 'react';\r\n\r\n// others\r\nimport CloseIcon from '../../assets/images/icons/close.svg';\r\n\r\n// styles\r\nimport './nav-menu-styles.scss';\r\n\r\ntype TProps = {\r\n  visible: boolean;\r\n  setVisible: (flag: boolean) => void;\r\n};\r\n\r\nconst NavMenu: FunctionComponent<TProps> = ({ visible, setVisible }) => {\r\n  const onClickHandler = (): void => setVisible(false);\r\n\r\n  return (\r\n    <div\r\n      className={`NavMenu ${visible && 'NavMenu--visible'}`}\r\n      onClick={onClickHandler}\r\n    >\r\n      <div\r\n        className={`NavMenu__container ${\r\n          visible && 'NavMenu__container--visible'\r\n        }`}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <div className=\"NavMenu__header\">\r\n          <input\r\n            placeholder=\"Search for a channel:\"\r\n            className=\"NavMenu__input-filter\"\r\n          />\r\n          <div className=\"NavMenu__button-close\">\r\n            <img alt=\"close-icon\" onClick={onClickHandler} src={CloseIcon} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavMenu;\r\n","export default __webpack_public_path__ + \"static/media/hamburger-menu.85ddbb0d.svg\";","import { FunctionComponent, useState } from 'react';\r\n\r\n// components\r\nimport NavMenu from '../NavMenu/NavMenu';\r\n\r\n// others\r\nimport HamburgerMenu from '../../assets/images/icons/hamburger-menu.svg';\r\n\r\n// styles\r\nimport './page-header-styles.scss';\r\n\r\nconst PageHeader: FunctionComponent<{}> = () => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <header className=\"PageHeader\">\r\n      {/* LEFT COLUMN */}\r\n      <div className=\"PageHeader__content\">\r\n        {/* PICKER */}\r\n        <div className=\"PageHeader__channel-picker\">ME</div>\r\n\r\n        {/* DETAILS */}\r\n        <div>\r\n          <p className=\"PageHeader__title\">Gentleman App - Meetings</p>\r\n          <p className=\"PageHeader__users\">2 Brothers-in-law online</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* RIGHT COLUMN */}\r\n      <img\r\n        alt=\"hamburger-menu\"\r\n        className=\"PageHeader__hamburger-menu\"\r\n        onClick={() => setVisible(true)}\r\n        src={HamburgerMenu}\r\n      />\r\n\r\n      {/* Nav Left Menu */}\r\n      <NavMenu visible={visible} setVisible={setVisible} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import { FunctionComponent } from 'react';\r\n\r\n// components\r\nimport PageHeader from '../PageHeader/PageHeader';\r\n\r\n// styles\r\nimport './page-styles.scss';\r\n\r\nconst Main: FunctionComponent<{}> = () => {\r\n  return (\r\n    <div className=\"Page\">\r\n      <PageHeader />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","// @ts-nocheck\r\nimport getFp from 'lodash/fp/get';\r\nimport { createSelector, Selector } from 'reselect';\r\n\r\n// store\r\nimport { REDUCER_KEY } from './actionsType';\r\nimport { TMainState } from '../../types';\r\nimport { TLocationState } from './types';\r\n\r\nexport const authSelector: Selector<TMainState, TLocationState> =\r\n  getFp(REDUCER_KEY);\r\n\r\n  export const errorMessageSelector: Selector<TMainState, boolean> = createSelector(\r\n    authSelector,\r\n    getFp('error')\r\n  );\r\n\r\nexport const isPendingSelector: Selector<TMainState, boolean> = createSelector(\r\n  authSelector,\r\n  getFp('isPending')\r\n);\r\n","import { useEffect, FunctionComponent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// components\r\nimport ErrorContainer from '../ErrorContainer/ErrorContainer';\r\nimport Page from '../Page/Page';\r\n\r\n// store\r\nimport {\r\n  errorMessageSelector,\r\n  isPendingSelector,\r\n} from '../../store/auth/selectors';\r\nimport { loginAction } from '../../store/auth/actions';\r\n\r\nconst App: FunctionComponent<{}> = () => {\r\n  const isPending = useSelector(isPendingSelector);\r\n  const dispatch = useDispatch();\r\n  const errorMessage = useSelector(errorMessageSelector);\r\n\r\n  useEffect(() => {\r\n    const password = prompt('Please enter a password:');\r\n    dispatch(loginAction(password as string));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (isPending) {\r\n    return null;\r\n  }\r\n\r\n  if (errorMessage) {\r\n    return <ErrorContainer />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Page />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// store\r\nimport { AuthActionsType } from './actionsType';\r\nimport { TLogin, TLoginSuccess, TLoginError } from './types';\r\n\r\nexport const loginAction = (payload: string): TLogin => ({\r\n  type: AuthActionsType.login,\r\n  payload,\r\n});\r\n\r\nexport const loginActionSuccess = (): TLoginSuccess => ({\r\n  type: AuthActionsType.loginSuccess,\r\n});\r\n\r\nexport const loginActionError = (payload: string): TLoginError => ({\r\n  type: AuthActionsType.loginError,\r\n  payload,\r\n});\r\n","export const config = {\r\n  apiKey: 'AIzaSyBYQ05TbRrP2wVEX7NDn5CWodoAnnkpcOY',\r\n  authDomain: 'comics-book.firebaseapp.com',\r\n  projectId: 'comics-book',\r\n  storageBucket: 'comics-book.appspot.com',\r\n  messagingSenderId: '426496482303',\r\n  appId: '1:426496482303:web:ebf257ff0a64a90f6ae5ca',\r\n};\r\n","// @ts-nocheck\r\nimport { FunctionComponent, useEffect } from 'react';\r\nimport firebase from 'firebase';\r\n\r\n// others\r\nimport { config } from './constants';\r\n\r\nconst Firebase: FunctionComponent<{}> = () => {\r\n  useEffect(() => {\r\n    firebase.initializeApp(config);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default Firebase;\r\n","// @ts-nocheck\r\n// others\r\nimport { TLoginError } from './types';\r\n\r\n// store\r\nimport { AuthActionsType } from './actionsType';\r\nimport { TAnyAction } from '../../types';\r\nimport { TAuthState } from './types';\r\n\r\nconst initialState: TAuthState = {\r\n  error: '',\r\n  isPending: true,\r\n};\r\n\r\nconst loginSuccess = (state: TAuthState): TAuthState => ({\r\n  ...state,\r\n  isPending: false,\r\n});\r\n\r\nconst loginError = (\r\n  state: TAuthState,\r\n  { payload: error }: TLoginError\r\n): TAuthState => ({\r\n  ...state,\r\n  error,\r\n  isPending: false,\r\n});\r\n\r\nconst auth = (\r\n  state: TAuthState = initialState,\r\n  action: TAnyAction\r\n): TAuthState => {\r\n  switch (action.type) {\r\n    case AuthActionsType.loginSuccess:\r\n      return loginSuccess(state, action);\r\n    case AuthActionsType.loginError:\r\n      return loginError(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default auth;\r\n","// @ts-nocheck\r\nimport { combineReducers } from 'redux';\r\n\r\n// store\r\nimport auth from './auth/reducer';\r\n\r\nconst reducers = { auth };\r\n\r\nconst createRootReducer = () =>\r\n  combineReducers({\r\n    ...reducers,\r\n  });\r\n\r\nexport default createRootReducer;\r\n","// @ts-nocheck\r\nimport { PutEffect, put } from 'redux-saga/effects';\r\nimport firebase from 'firebase';\r\n\r\n// others\r\nimport { EMAIL } from '../../constants';\r\n\r\n// store\r\nimport { loginActionError, loginActionSuccess } from './actions';\r\n\r\nexport function* login(data: {\r\n  payload: string;\r\n}): Generator<PutEffect<any>> {\r\n  const password = data.payload;\r\n  \r\n  try {\r\n    yield firebase.auth().signInWithEmailAndPassword(EMAIL, password);\r\n    yield put(loginActionSuccess());\r\n  } catch (error) {\r\n    const { code } = error;\r\n    yield put(loginActionError(code))\r\n  }\r\n}\r\n","export const EMAIL = 'eryk.sandecki@gmail.com'","import { all, AllEffect, ForkEffect, takeEvery } from 'redux-saga/effects';\r\n\r\n// store\r\nimport { login } from './saga';\r\nimport { AuthActionsType } from './actionsType';\r\n\r\nexport function* watchAuth(): Generator<\r\n  AllEffect<ForkEffect<any>>\r\n> {\r\n  yield all([\r\n    // @ts-ignore\r\n    takeEvery(AuthActionsType.login, login),\r\n  ]);\r\n}\r\n","// @ts-nocheck\r\nimport { SagaMiddleware } from 'redux-saga';\r\n\r\n// store\r\nimport { watchAuth } from './auth/watch';\r\n\r\nconst watches = [watchAuth];\r\n\r\nconst sagaMiddlewareRuns = (sagaMiddleware: SagaMiddleware): void => {\r\n  for (const watch of watches) sagaMiddleware.run(watch);\r\n};\r\n\r\nexport default sagaMiddlewareRuns;\r\n","// @ts-nocheck\r\nimport {\r\n  Action,\r\n  applyMiddleware,\r\n  CombinedState,\r\n  createStore,\r\n  Store,\r\n} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport thunk from 'redux-thunk';\r\n\r\n// store\r\nimport reducers from './reducers';\r\nimport sagaMiddlewareRuns from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst configureStore = (): Store<CombinedState<any>, Action> => {\r\n  const store = createStore(\r\n    reducers(),\r\n    {},\r\n    composeWithDevTools(applyMiddleware(...[thunk], sagaMiddleware))\r\n  );\r\n  sagaMiddlewareRuns(sagaMiddleware);\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n// components\r\nimport App from './components/App/App';\r\nimport Firebase from './components/Firebase/Firebase';\r\n\r\n// store\r\nimport configureStore from './store/configureStore';\r\n\r\n// styles\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={configureStore()}>\r\n      <Firebase />\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}