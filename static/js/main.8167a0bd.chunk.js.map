{"version":3,"sources":["store/auth/actionsType.ts","assets/images/icons/close.svg","components/NavMenu/NavMenu.tsx","assets/images/icons/hamburger-menu.svg","components/PageHeader/PageHeader.tsx","components/Page/Page.tsx","store/auth/selectors.ts","components/App/App.tsx","components/Firebase/constants.ts","components/Firebase/Firebase.tsx","store/auth/reducer.ts","store/reducers.ts","store/auth/saga.ts","constants.ts","store/auth/actions.ts","store/auth/watch.ts","store/sagas.ts","store/configureStore.ts","index.tsx"],"names":["AuthActionsType","NavMenu","visible","setVisible","onClickHandler","className","onClick","e","stopPropagation","placeholder","alt","src","CloseIcon","PageHeader","useState","HamburgerMenu","Main","authSelector","getFp","errorMessageSelector","createSelector","isPendingSelector","App","useSelector","useDispatch","Page","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Firebase","useEffect","firebase","initializeApp","initialState","error","isPending","loginSuccess","state","loginError","payload","reducers","auth","action","type","createRootReducer","combineReducers","login","data","password","signInWithEmailAndPassword","put","code","watchAuth","all","takeEvery","watches","sagaMiddlewareRuns","sagaMiddleware","watch","run","createSagaMiddleware","configureStore","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8167a0bd.chunk.js","sourcesContent":["export const REDUCER_KEY = 'auth';\n\nexport enum AuthActionsType {\n  login = 'login',\n  loginSuccess = 'loginSuccess',\n  loginError = 'loginError',\n}\n","export default __webpack_public_path__ + \"static/media/close.91205169.svg\";","import { FunctionComponent } from 'react';\n\n// others\nimport CloseIcon from '../../assets/images/icons/close.svg';\n\n// styles\nimport './nav-menu-styles.scss';\n\ntype TProps = {\n  visible: boolean;\n  setVisible: (flag: boolean) => void;\n};\n\nconst NavMenu: FunctionComponent<TProps> = ({ visible, setVisible }) => {\n  const onClickHandler = (): void => setVisible(false);\n\n  return (\n    <div\n      className={`NavMenu ${visible && 'NavMenu--visible'}`}\n      onClick={onClickHandler}\n    >\n      <div\n        className={`NavMenu__background ${\n          visible && 'NavMenu__background--visible'\n        }`}\n      />\n      <div\n        className={`NavMenu__container ${\n          visible && 'NavMenu__container--visible'\n        }`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"NavMenu__header\">\n          <input\n            placeholder=\"Search for a channel:\"\n            className=\"NavMenu__input-filter\"\n          />\n          <div className=\"NavMenu__button-close\">\n            <img alt=\"close-icon\" onClick={onClickHandler} src={CloseIcon} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NavMenu;\n","export default __webpack_public_path__ + \"static/media/hamburger-menu.4f615ee5.svg\";","import { FunctionComponent, useState } from 'react';\n\n// components\nimport NavMenu from '../NavMenu/NavMenu';\n\n// others\nimport HamburgerMenu from '../../assets/images/icons/hamburger-menu.svg';\n\n// styles\nimport './page-header-styles.scss';\n\nconst PageHeader: FunctionComponent<{}> = () => {\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <header className=\"PageHeader\">\n      {/* LEFT COLUMN */}\n      <div className=\"PageHeader__content\">\n        {/* PICKER */}\n        <div className=\"PageHeader__channel-picker\">ME</div>\n\n        {/* DETAILS */}\n        <div>\n          <p className=\"PageHeader__title\">Gentleman App - Meetings</p>\n          <p className=\"PageHeader__users\">2 Brothers-in-law online</p>\n        </div>\n      </div>\n\n      {/* RIGHT COLUMN */}\n      <img\n        alt=\"hamburger-menu\"\n        className=\"PageHeader__hamburger-menu\"\n        onClick={() => setVisible(true)}\n        src={HamburgerMenu}\n      />\n\n      {/* Nav Left Menu */}\n      <NavMenu visible={visible} setVisible={setVisible} />\n    </header>\n  );\n};\n\nexport default PageHeader;\n","import { FunctionComponent } from 'react';\n\n// components\nimport PageHeader from '../PageHeader/PageHeader';\n\n// styles\nimport './page-styles.scss';\n\nconst Main: FunctionComponent<{}> = () => {\n  return (\n    <div className=\"Page\">\n      <PageHeader />\n    </div>\n  );\n};\n\nexport default Main;\n","// @ts-nocheck\nimport getFp from 'lodash/fp/get';\nimport { createSelector, Selector } from 'reselect';\n\n// store\nimport { REDUCER_KEY } from './actionsType';\nimport { TMainState } from '../../types';\nimport { TLocationState } from './types';\n\nexport const authSelector: Selector<TMainState, TLocationState> =\n  getFp(REDUCER_KEY);\n\n  export const errorMessageSelector: Selector<TMainState, boolean> = createSelector(\n    authSelector,\n    getFp('error')\n  );\n\nexport const isPendingSelector: Selector<TMainState, boolean> = createSelector(\n  authSelector,\n  getFp('isPending')\n);\n","import { useEffect, FunctionComponent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// components\nimport ErrorContainer from '../ErrorContainer/ErrorContainer';\nimport Page from '../Page/Page';\n\n// store\nimport {\n  errorMessageSelector,\n  isPendingSelector,\n} from '../../store/auth/selectors';\nimport { loginAction } from '../../store/auth/actions';\n\nconst App: FunctionComponent<{}> = () => {\n  const isPending = useSelector(isPendingSelector);\n  const dispatch = useDispatch();\n  const errorMessage = useSelector(errorMessageSelector);\n\n  // useEffect(() => {\n  //   const password = prompt('Please enter a password:');\n  //   dispatch(loginAction(password as string));\n  //   // eslint-disable-next-line\n  // }, []);\n\n  // if (isPending) {\n  //   return null;\n  // }\n\n  // if (errorMessage) {\n  //   return <ErrorContainer />;\n  // }\n\n  return (\n    <div className=\"App\">\n      <Page />\n    </div>\n  );\n};\n\nexport default App;\n","export const config = {\n  apiKey: 'AIzaSyBYQ05TbRrP2wVEX7NDn5CWodoAnnkpcOY',\n  authDomain: 'comics-book.firebaseapp.com',\n  projectId: 'comics-book',\n  storageBucket: 'comics-book.appspot.com',\n  messagingSenderId: '426496482303',\n  appId: '1:426496482303:web:ebf257ff0a64a90f6ae5ca',\n};\n","// @ts-nocheck\nimport { FunctionComponent, useEffect } from 'react';\nimport firebase from 'firebase';\n\n// others\nimport { config } from './constants';\n\nconst Firebase: FunctionComponent<{}> = () => {\n  useEffect(() => {\n    firebase.initializeApp(config);\n    // eslint-disable-next-line\n  }, []);\n\n  return null;\n};\n\nexport default Firebase;\n","// @ts-nocheck\n// others\nimport { TLoginError } from './types';\n\n// store\nimport { AuthActionsType } from './actionsType';\nimport { TAnyAction } from '../../types';\nimport { TAuthState } from './types';\n\nconst initialState: TAuthState = {\n  error: '',\n  isPending: true,\n};\n\nconst loginSuccess = (state: TAuthState): TAuthState => ({\n  ...state,\n  isPending: false,\n});\n\nconst loginError = (\n  state: TAuthState,\n  { payload: error }: TLoginError\n): TAuthState => ({\n  ...state,\n  error,\n  isPending: false,\n});\n\nconst auth = (\n  state: TAuthState = initialState,\n  action: TAnyAction\n): TAuthState => {\n  switch (action.type) {\n    case AuthActionsType.loginSuccess:\n      return loginSuccess(state, action);\n    case AuthActionsType.loginError:\n      return loginError(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-nocheck\nimport { combineReducers } from 'redux';\n\n// store\nimport auth from './auth/reducer';\n\nconst reducers = { auth };\n\nconst createRootReducer = () =>\n  combineReducers({\n    ...reducers,\n  });\n\nexport default createRootReducer;\n","// @ts-nocheck\nimport { PutEffect, put } from 'redux-saga/effects';\nimport firebase from 'firebase';\n\n// others\nimport { EMAIL } from '../../constants';\n\n// store\nimport { loginActionError, loginActionSuccess } from './actions';\n\nexport function* login(data: {\n  payload: string;\n}): Generator<PutEffect<any>> {\n  const password = data.payload;\n  \n  try {\n    yield firebase.auth().signInWithEmailAndPassword(EMAIL, password);\n    yield put(loginActionSuccess());\n  } catch (error) {\n    const { code } = error;\n    yield put(loginActionError(code))\n  }\n}\n","export const EMAIL = 'eryk.sandecki@gmail.com'","// store\nimport { AuthActionsType } from './actionsType';\nimport { TLogin, TLoginSuccess, TLoginError } from './types';\n\nexport const loginAction = (payload: string): TLogin => ({\n  type: AuthActionsType.login,\n  payload,\n});\n\nexport const loginActionSuccess = (): TLoginSuccess => ({\n  type: AuthActionsType.loginSuccess,\n});\n\nexport const loginActionError = (payload: string): TLoginError => ({\n  type: AuthActionsType.loginError,\n  payload,\n});\n","import { all, AllEffect, ForkEffect, takeEvery } from 'redux-saga/effects';\n\n// store\nimport { login } from './saga';\nimport { AuthActionsType } from './actionsType';\n\nexport function* watchAuth(): Generator<\n  AllEffect<ForkEffect<any>>\n> {\n  yield all([\n    // @ts-ignore\n    takeEvery(AuthActionsType.login, login),\n  ]);\n}\n","// @ts-nocheck\nimport { SagaMiddleware } from 'redux-saga';\n\n// store\nimport { watchAuth } from './auth/watch';\n\nconst watches = [watchAuth];\n\nconst sagaMiddlewareRuns = (sagaMiddleware: SagaMiddleware): void => {\n  for (const watch of watches) sagaMiddleware.run(watch);\n};\n\nexport default sagaMiddlewareRuns;\n","// @ts-nocheck\nimport {\n  Action,\n  applyMiddleware,\n  CombinedState,\n  createStore,\n  Store,\n} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport thunk from 'redux-thunk';\n\n// store\nimport reducers from './reducers';\nimport sagaMiddlewareRuns from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = (): Store<CombinedState<any>, Action> => {\n  const store = createStore(\n    reducers(),\n    {},\n    composeWithDevTools(applyMiddleware(...[thunk], sagaMiddleware))\n  );\n  sagaMiddlewareRuns(sagaMiddleware);\n\n  return store;\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n// components\nimport App from './components/App/App';\nimport Firebase from './components/Firebase/Firebase';\n\n// store\nimport configureStore from './store/configureStore';\n\n// styles\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <Firebase />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}